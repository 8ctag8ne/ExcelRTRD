using CommunityToolkit.Maui.Storage;
using System.Text;
namespace test
{
    public partial class MainPage : ContentPage
	{
        private async void SaveButton_Clicked(object sender, EventArgs e) // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–±–µ—Ä–µ–≥—Ç–∏"
		{
            try{
                using var stream = new MemoryStream(Encoding.Default.GetBytes("Text"));
                var path = await FileSaver.SaveAsync("table.json", stream, cancellationTokenSource.Token);
                //DisplayPromptAsync("–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É", "–í–∫–∞–∂—ñ—Ç—å —à–ª—è—Ö –¥–æ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É:", "–î–æ–±—Ä–µ", "–ó–∞–∫—Ä–∏—Ç–∏", initialValue: "");
                if(path.FilePath!=null)
                {
                    JSONManager.SaveFile(path.FilePath, new JsonSerializable_(Table, CountColumn, CountRow));
                }
            }
            catch (NullReferenceException)
            {
                return;
            }
            catch(Exception)
            {
                await DisplayAlert("–ü–æ–º–∏–ª–∫–∞", "–ù–µ–º–æ–∂–ª–∏–≤–æ –∑–±–µ—Ä–µ–≥—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Ñ–∞–π–ª.", "–î–æ–±—Ä–µ");
                return;
            }
		}
		private async void ReadButton_Clicked(object sender, EventArgs e)// –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—á–∏—Ç–∞—Ç–∏"
		{
            var customFileType = new FilePickerFileType(
                new Dictionary<DevicePlatform, IEnumerable<string>>
                {
                    { DevicePlatform.WinUI, new[] { ".json"} }, // file extension
                });
            var MyFile = await FilePicker.PickAsync(new PickOptions{
                FileTypes = customFileType,
                PickerTitle = "–û–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª"
            });
            try
            { 
                string result = MyFile.FullPath;
                JsonSerializable_ obj = JSONManager.ReadFile(result);
                CountColumn = obj.CountColumn;
                CountRow = obj.CountRow;
                foreach(var cell in Table.CellByID.Values) //–≤–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∫–ª—ñ—Ç–∏–Ω –∑ GlobalScope
                {
                    cell.Delete();
                }
                Table = new Table();
                Cell.Count = 0;
                foreach(var cell in obj.A) //–¥–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ –∫–ª—ñ—Ç–∏–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—é
                {
                    Table.CellByID.Add(cell.ID, new Cell(cell.value, cell.expression, cell.coordinateX, cell.coordinateY, cell.name, cell.ID));
                    Table.IDByName.Add(cell.name, cell.ID);
                    Table.BasisCells.Add(cell.ID, cell.BasisCells);
                    Table.DependentCells.Add(cell.ID, cell.DependentCells);
                    Table.Color.Add(cell.ID, 0);
                    Table.IDByCoordinates.Add(new Tuple<int, int>(cell.coordinateX, cell.coordinateY), cell.ID);
                }
                Refresh(); //–æ–Ω–æ–≤–ª—é—î–º–æ Grid –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å
            }
            catch(NullReferenceException) //—è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ "–ó–∞–∫—Ä–∏—Ç–∏"
            {
                return;
            }
            catch (Exception) //—è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á - –ø—ñ—Ç—É—Ö
            {
                await DisplayAlert("–ü–æ–º–∏–ª–∫–∞", "–ù–µ–º–æ–∂–ª–∏–≤–æ –æ–±—Ä–∞—Ç–∏ –¥–∞–Ω–∏–π —Ñ–∞–π–ª.", "–î–æ–±—Ä–µ");
            }
		}
		private async void ExitButton_Clicked(object sender, EventArgs e)
		{
            bool answer = await DisplayAlert("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è", "–í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏?ü§®ü§®ü§®",
            "–¢–∞–∫", "–ù—ñ");
            if (answer)
            {
                System.Environment.Exit(0);
            }
		}
		private async void HelpButton_Clicked(object sender, EventArgs e)
		{
		    await DisplayAlert("–î–æ–≤—ñ–¥–∫–∞", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞ —Ä–æ–±–æ—Ç–∞ ‚Ññ1 –∑–∞ –≤–∞—Ä—ñ–∞–Ω—Ç–æ–º 19.\n–°—Ç—É–¥–µ–Ω—Ç–∞ –≥—Ä—É–ø–∏ –ö-24 –Ø–≥–æ—Ç—ñ–Ω–∞ –ù–∞–∑–∞—Ä—ñ—è –í–∞–ª–µ–Ω—Ç–∏–Ω–æ–≤–∏—á–∞.\n–í–∏–∫–æ–Ω–∞–Ω–∞ –ø—ñ–¥ –Ω–∞—É–∫–æ–≤–∏–º –∫–µ—Ä—ñ–≤–Ω–∏—Ü—Ç–≤–æ–º –ú–∏–Ω—å–∫–∞ –í–∞–¥–∏–º–∞ —Ç–∞ ChatGPTüòéü§ô", "–ö—Ä—É—Ç—è–∫");
		}
    }
}